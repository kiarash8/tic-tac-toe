{"version":3,"sources":["background.tsx","square-icon.tsx","Board.tsx","App.tsx","index.tsx"],"names":["Background","winer","strokeColor","player","xmlns","className","style","width","d","winLine","stroke","strokeWidth","strokeDasharray","strokeDashoffset","SquareIcon","symbol","viewBox","combinationCollection","Board","useState","square","setSquare","X","O","score","setScore","move","turn","undefined","game","setGame","gameState","useEffect","clearBoard","combination","map","combinations","split","row","col","collection","includes","Set","size","indexOf","currentScore","rowIndex","column","columnIndex","onClick","point","currentSquare","handleMove","disabled","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.3859fde0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Winer } from \"./type\";\n\nexport const Background: React.FC<{\n    winer: Winer;\n}> = ({ winer }) => {\n    const strokeColor = winer?.player === 'O' ? 'rgb(242, 235, 211)' : 'rgb(84, 84, 84)';\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"background\" style={{width: '216px'}}>\n        <path d=\"M108,83L6,83\"></path>\n        <path d=\"M108,153L6,153\"></path>\n        <path d=\"M108,83L210,83\"></path>\n        <path d=\"M108,153L210,153\"></path>\n        <path d=\"M73,118L73,16\"></path>\n        <path d=\"M143,118L143,16\"></path>\n        <path d=\"M73,118L73,220\"></path>\n        <path d=\"M143,118L143,220\"></path>\n        {winer?.winLine && [\n            // horizontal\n            <path d=\"M209.1,48H6.9\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 210, strokeDashoffset: 0}}></path>,\n            <path d=\"M209.1,116H6.9\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 210, strokeDashoffset: 0}}></path>,\n            <path d=\"M209.1,184H6.9\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 210, strokeDashoffset: 0}}></path>,\n            // vertical\n            <path d=\"M40,219.1V16.9\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 210, strokeDashoffset: 0}}></path>,\n            <path d=\"M108,221.6V19.4\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 210, strokeDashoffset: 0}}></path>,\n            <path d=\"M176,221.6V19.4\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 210, strokeDashoffset: 0}}></path>,\n            // diagonal\n            <path d=\"M7,15.1L211.6,219\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 285, strokeDashoffset: 0}}></path>,\n            <path d=\"M208,14.8L4.1,219.4\" style={{stroke: strokeColor, strokeWidth: '6px', strokeDasharray: 285, strokeDashoffset: 0}}></path>\n        ][winer.winLine - 1]}\n    </svg>\n  );\n};\n\nexport default Background;\n","import React from \"react\";\nimport { Symbols } from \"./type\";\n\nexport const SquareIcon: React.FC<{\n    symbol: Symbols,\n    stroke?: 'default' | 'custom';\n}> = ({ symbol, stroke = 'default' }) => {\n\n  return (\n    symbol ?\n        (symbol === 'O') ?\n            <svg  xmlns=\"http://www.w3.org/2000/svg\" className={`icon${(stroke === 'custom') ? ' white-stroke' : ''}`} viewBox=\"0 0 128 128\"><path d=\"M64,16A48,48 0 1,0 64,112A48,48 0 1,0 64,16\"></path></svg>\n        :\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className={`icon${(stroke === 'custom') ? ' grey-stroke' : ''}`} viewBox=\"0 0 128 128\"><path d=\"M16,16L112,112\"></path><path d=\"M112,16L16,112\"></path></svg>\n     : null\n  );\n};\n\nexport default SquareIcon;\n","import React, { useEffect, useState } from \"react\";\nimport Background from \"./background\";\nimport SquareIcon from \"./square-icon\";\nimport { Game, Score, Symbols } from \"./type\";\n\nconst combinationCollection = [\n    // horizontal\n    ['0,0', '0,1', '0,2'],\n    ['1,0', '1,1', '1,2'],\n    ['2,0', '2,1', '2,2'],\n    // vertical\n    ['0,0', '1,0', '2,0'],\n    ['0,1', '1,1', '2,1'],\n    ['0,2', '1,2', '2,2'],\n    // diagonal\n    ['0,0', '1,1', '2,2'],\n    ['0,2', '1,1', '2,0'],\n];\n\nexport const Board: React.FC = () => {\n    const [square, setSquare] = useState<[Symbols, Symbols, Symbols][]>([]);\n    const [score, setScore] = useState<Score>({ X: 0, O: 0 });\n    const [game, setGame] = useState<Game>({\n        move: 0,\n        turn: undefined,\n        winer: null\n    });\n    const gameState = () => { return (game.winer !== null || game.move >= 9) ? 'stop' : 'playing' }\n\n    useEffect(() => {\n        clearBoard();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const reset = () => {\n        clearBoard();\n        setScore({ X: 0, O: 0 });\n    }\n\n    const clearBoard = () => {\n        setSquare([[undefined, undefined, undefined], [undefined, undefined, undefined], [undefined, undefined, undefined]]);\n        setGame({\n            move: 0,\n            turn: 'X',\n            winer: null\n        });\n    }\n\n    const handleMove = (point: [number, number]) => {\n        const currentSquare = square;\n        currentSquare[point[0]][point[1]] = game.turn;\n        \n        setSquare(currentSquare);\n        setGame({\n            ...game,\n            move: game.move + 1,\n            turn: game.turn === 'X' ? 'O' : 'X'\n        });\n      }\n\n    useEffect(() => {\n        if(game.turn !== undefined){        \n            const collections = combinationCollection.map(combinations => {\n                return combinations.map(combination => {\n                    const [row, col] = combination.split(',');\n                    return square[+row][+col];\n                })\n            });\n            \n            const combination = collections.map(collection => {\n                if(!collection.includes(undefined))\n                    return new Set(collection).size === 1 ? collection[0] : undefined;\n                return undefined;\n            });\n            \n            const winer:Symbols = combination.includes('X') ? 'X' : (combination.includes('O') ? 'O' : undefined);\n            if(winer) {\n                setGame({\n                    ...game,\n                    winer: {\n                        player: winer,\n                        winLine: combination.indexOf(winer) + 1\n                    }\n                });\n\n                const currentScore = score;\n                currentScore[winer]++;\n                setScore({\n                    ...currentScore\n                });\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [game.turn]);\n\n  return (\n    <div className=\"game\">\n        <div className=\"score\">\n            <div className={`player ${(game.turn === 'X' && !game.winer) || game.winer?.player === 'X' ? 'active' : ''}`}>\n                <SquareIcon symbol=\"X\" />\n                <span className=\"value\">{score.X}</span>\n            </div>\n            <div className={`player ${(game.turn === 'O' && !game.winer) || game.winer?.player === 'O' ? 'active' : ''}`}>\n                <SquareIcon symbol=\"O\" />\n                <span className=\"value\">{score.O}</span>\n            </div>\n        </div>\n        <div className=\"status\">\n            {(gameState() === 'playing') ?\n                <span><SquareIcon symbol={game.turn} /> Turn</span>\n            : (game.winer ? \n                    <span><SquareIcon symbol={game.winer.player} /> is Win!</span>\n                :\n                    <span>Game Over!</span>\n            )}\n        </div>\n        <div className=\"board\">\n            <Background winer={game.winer} />\n            <table>\n                {square.map((row, rowIndex) => \n                    <tr key={rowIndex}>\n                        {row.map((column, columnIndex) =>\n                            <td key={columnIndex}>\n                                <button\n                                    onClick={() => handleMove([rowIndex, columnIndex])}\n                                    disabled={(column !== undefined) || (gameState() === 'stop')}                \n                                    className=\"square\">\n                                    {column && <SquareIcon symbol={column} stroke=\"custom\" />}\n                                </button>\n                            </td>\n                        )}\n                    </tr>\n                )}\n            </table>\n        </div>\n        <div className=\"action\">\n            <button className=\"reset\" onClick={() => reset()}>reset</button>\n            {(gameState() === 'stop') && <button className=\"continue\" onClick={() => clearBoard()}>continue</button>}\n        </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import \"./assets/styles/style.scss\";\n\nimport Board from \"./Board\";\n\nexport default function App() {\n  return (\n    <Board />\n  );\n}\n","import { render } from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}